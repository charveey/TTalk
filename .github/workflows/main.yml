name: TTalk

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        platform: [x64, x86]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: TTalk.sln                         # Replace with your solution name, i.e. App1.sln.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Set unpackaged
      shell: pwsh
      run: |
       $id = get-random
       $code = @"
       using System;
       using System.IO;
       using System.Collections.Generic;
       using System.Linq;
       namespace HelloWorld
       {
         public class Program$id
         {
           public static void Main(){
             List<string> lines = File.ReadAllLines(Path.Combine(@"$pwd", "TTalk.WinUI.csproj")).ToList();
             lines.Insert(5, "<WindowsPackageType>None</WindowsPackageType>");
             File.WriteAllText(Path.Combine(@"$pwd", "TTalk.WinUI.csproj"), string.Join("\n", lines.ToArray()));
           }
         }
       }
       "@
       Add-Type -TypeDefinition $code -Language CSharp
       iex "[HelloWorld.Program$id]::Main()"

    # Create the app by building and publishing the project
    - name: Create the app
      run: msbuild $env:Solution_Name /t:Publish /p:Configuration=$env:Configuration /p:Platform=$env:Platform
      env:
        Configuration: ${{ matrix.configuration }}
        Platform: ${{ matrix.platform }}

    # Upload the app
    - name: Upload app
      uses: actions/upload-artifact@v2
      with:
        name: Upload app
        path: ${{ env.Solution_Name }}\\bin
